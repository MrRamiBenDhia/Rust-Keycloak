# STAGE1: Build the binary
FROM rust:alpine as builder

# Install build dependencies
RUN apk add --no-cache build-base musl-dev openssl-dev openssl

# Create a new empty shell project
WORKDIR /my-rust-app

ENV DATABASE_URL=mysql://user:password@mysql:3306/rust_spring_sql

# Copy over the Cargo.toml files to the shell project
COPY Cargo.toml Cargo.lock ./

# Build and cache the dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo fetch
RUN cargo build 
RUN rm src/main.rs

# Copy the actual code files and build the my-rust-app
COPY src ./src/
# Update the file date
RUN touch src/main.rs
RUN cargo build 

# STAGE2: create a slim image with the compiled binary
FROM alpine as runner

# Set environment variable
# ENV DATABASE_URL=mysql://user:password@localhost:3306/rust_spring_sql

# Copy the binary from the builder stage
WORKDIR /my-rust-app
COPY --from=builder /my-rust-app/target/release/my-rust-app my-rust-app

CMD ["./my-rust-app"]
